// Code generated by mockery v2.43.1. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/e1m0re/grdn/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// Monitor is an autogenerated mock type for the Monitor type
type Monitor struct {
	mock.Mock
}

// GetMetricsList provides a mock function with given fields:
func (_m *Monitor) GetMetricsList() models.MetricsList {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetMetricsList")
	}

	var r0 models.MetricsList
	if rf, ok := ret.Get(0).(func() models.MetricsList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(models.MetricsList)
		}
	}

	return r0
}

// UpdateData provides a mock function with given fields:
func (_m *Monitor) UpdateData() {
	_m.Called()
}

// UpdateGOPS provides a mock function with given fields: ctx
func (_m *Monitor) UpdateGOPS(ctx context.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for UpdateGOPS")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMonitor creates a new instance of Monitor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMonitor(t interface {
	mock.TestingT
	Cleanup(func())
}) *Monitor {
	mock := &Monitor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
